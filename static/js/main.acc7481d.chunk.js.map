{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Button/Button.module.css","components/Searchbar/SearchBar.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/services/pixabay.js","components/Modal/Modal.js","components/Button/Button.js","components/ImageGallery/ImageGallery.js","App.js","reportWebVitals.js","index.js","components/ImageGallery/ImageGallery.module.css"],"names":["module","exports","Searchbar","handleFormSubmit","useState","imageName","setImageName","className","s","onSubmit","event","preventDefault","trim","alert","SearchForm","type","SearchFormButton","reactIcons","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","ImageGalleryItem","imageArray","onImageClick","map","image","src","webformatURL","alt","tag","ImageGalleryItemImage","onClick","id","api","fetchImage","page","fetch","then","response","ok","json","Promise","reject","Error","modalRoot","document","querySelector","Modal","toggleModal","largeImg","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","Overlay","target","Button","handleClickBtn","ButtonItem","ImageGallery","pageScroll","setPage","perPage","setImageArray","status","setStatus","showModal","setShowModal","setLargeImg","ImageAPI","data","hits","length","catch","error","Query","Loader","color","height","width","imageId","img","find","largeImageURL","App","setimageName","scrollTo","top","documentElement","scrollHeight","behavior","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.acc7481d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__20WEC\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__301u9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__387sK\",\"Modal\":\"Modal_Modal__2ChzB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonItem\":\"Button_ButtonItem__3etLA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__xZkSA\",\"SearchForm\":\"SearchBar_SearchForm__39vQG\",\"SearchFormButton\":\"SearchBar_SearchFormButton__KZ8et\",\"SearchFormButton-label\":\"SearchBar_SearchFormButton-label__3kQX9\",\"SearchFormInput\":\"SearchBar_SearchFormInput__2NSmQ\",\"reactIcons\":\"SearchBar_reactIcons__1J_pw\"};","import { useState } from \"react\";\r\nimport { ImSearch } from \"react-icons/im\";\r\nimport s from \"./SearchBar.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Searchbar({ handleFormSubmit }) {\r\n  const [imageName, setImageName] = useState(\"\");\r\n\r\n  const handleNameChange = (event) => {\r\n    setImageName(event.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (imageName.trim() === \"\") {\r\n      alert(\"Пожалуйста введите ваш запрос\");\r\n      return;\r\n    }\r\n    handleFormSubmit(imageName);\r\n    setImageName(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form onSubmit={handleSubmit} className={s.SearchForm}>\r\n        <button type=\"submit\" className={s.SearchFormButton}>\r\n          <ImSearch className={s.reactIcons} />\r\n        </button>\r\n\r\n        <input\r\n          className={s.SearchFormInput}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={imageName}\r\n          onChange={handleNameChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  handleFormSubmit: PropTypes.func,\r\n};\r\n","//import { Component } from \"react\";\r\nimport s from \"./ImageGalleryItem.module.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ImageGalleryItem ({imageArray, onImageClick}) {\r\n      return imageArray.map((image) => (\r\n      <li className={s.ImageGalleryItem} key={image.id}>\r\n        <img\r\n          src={image.webformatURL}\r\n          alt={image.tag}\r\n          className={s.ImageGalleryItemImage}\r\n          onClick={onImageClick}\r\n        />\r\n      </li>\r\n    ));\r\n  }\r\n\r\n\r\nImageGalleryItem.propTypes={\r\n  onImageClick:PropTypes.func,\r\n  imageArray:PropTypes.array,\r\n}\r\n","export function fetchImage(imageName, page) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${imageName}&page=${page}&key=23276068-4a413a2f7a08bb1d67038a93d&image_type=photo&orientation=horizontal&per_page=12`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(`There are no images called ${imageName}`));\r\n  });\r\n}\r\n\r\nconst api = { fetchImage };\r\nexport default api;\r\n","import { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport s from \"./Modal.module.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\nexport default function Modal ({toggleModal, largeImg}) {\r\n  \r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown)\r\n    })\r\n\r\n    useEffect(() => {\r\n        window.removeEventListener('keydown', handleKeyDown)\r\n    })\r\n\r\n   const handleKeyDown = e => {\r\n        if(e.code === 'Escape') {\r\n          toggleModal();\r\n        }\r\n    }\r\n\r\n    const  handleOverlayClick = event => {\r\n        if(event.currentTarget === event.target) {\r\n          toggleModal();\r\n        }\r\n    }\r\n\r\n   \r\n    return createPortal(\r\n      <div className={s.Overlay} onClick={handleOverlayClick}>\r\n        <div className={s.Modal}>\r\n          <img src={largeImg} alt=''/>\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  \r\n  }\r\n\r\n\r\nModal.propTypes={\r\n  toggleModal:PropTypes.func,\r\n  largeImg: PropTypes.object,\r\n}","import s from \"./Button.module.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Button({ handleClickBtn }) {\r\n  return (\r\n    <button type=\"button\" className={s.ButtonItem} onClick={handleClickBtn}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes={\r\n  handleClickBtn: PropTypes.func,\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\nimport ImageAPI from \"../services/pixabay\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport Button from \"../Button/Button\";\r\nimport s from \"./ImageGallery.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function ImageGallery({ pageScroll, imageName }) {\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerPage] = useState(12);\r\n  const [imageArray, setImageArray] = useState([]);\r\n // const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState(\"idle\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [largeImg, setLargeImg] = useState(\"\");\r\n  // const activeBtn = imageArray.length > 0 && imageArray.length / page === 12;\r\n\r\n  useEffect(() => {\r\n    // const { page, perPage } = this.state;\r\n    // const { imageName } = this.props;\r\n\r\n    if (!imageName.trim()) return;\r\n    //setImageArray([]);\r\n    setPage(1);\r\n    setStatus(\"pending\");\r\n\r\n    ImageAPI.fetchImage(imageName, page, perPage)\r\n      .then((data) => {\r\n        if (data.hits.length > 0) {\r\n          setImageArray(data.hits);\r\n          setStatus(\"resolved\");\r\n          pageScroll();\r\n        } else {\r\n          setStatus(\"rejected\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setStatus(\"rejected\");\r\n      });\r\n  }, [imageName, page, perPage, pageScroll]);\r\n\r\n  const handleClickBtn = () => {\r\n    \r\n    setStatus(\"pending\");\r\n    ImageAPI.fetchImage(imageName, page, perPage)\r\n      .then(({ hits }) => {\r\n        setImageArray([...imageArray, ...hits]);\r\n        setStatus(\"resolved\");\r\n        pageScroll();\r\n\r\n        //newPage();\r\n      })\r\n      .catch((error) => {\r\n        setStatus(\"rejected\");\r\n      });\r\n  };\r\n\r\n  // const newPage = () => {\r\n  //   setPage((page) => page + 1);\r\n  // };\r\n\r\n  const toggleModal = () => setShowModal(!showModal);\r\n\r\n  const onImageClick = (imageId) => {\r\n    //  e.preventDefault();\r\n    //   let src = e.target.src;\r\n\r\n    const img = imageArray.find(({ id }) => id === imageId);\r\n    setLargeImg(img.largeImageURL);\r\n    //setLargeImg(imageArray.find((el) => el.webformatURL === src));\r\n    toggleModal();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {status === \"idle\" && (\r\n        <div className={s.Query}>Please enter your query!</div>\r\n      )}\r\n      {status === \"pending\" && (\r\n        <Loader\r\n          className={s.Loader}\r\n          type=\"Circles\"\r\n          color=\"#d5e215\"\r\n          height={100}\r\n          width={100}\r\n        />\r\n      )}\r\n      {status === \"rejected\" && (\r\n        <h1 className={s.Query}>Something was wrong please try again!</h1>\r\n      )}\r\n      <ul className={s.ImageGallery}>\r\n        <ImageGalleryItem imageArray={imageArray} onImageClick={onImageClick} />\r\n      </ul>\r\n      {\r\n        //activeBtn &&\r\n        <Button handleClickBtn={handleClickBtn} />\r\n      }\r\n      {showModal && (\r\n        <Modal toggleModal={toggleModal} largeImg={largeImg}></Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  imageName: PropTypes.string,\r\n  pageScroll: PropTypes.func,\r\n};\r\n\r\n// export default class ImageGallery extends Component {\r\n//   state = {\r\n//     page: 1,\r\n//     perPage: 12,\r\n//     imageArray: [],\r\n//     error: null,\r\n//     status: \"idle\",\r\n//     showModal: false,\r\n//     largeImg: null,\r\n//   };\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     const { page, perPage } = this.state;\r\n//     const { imageName } = this.props;\r\n\r\n//     if (prevProps.imageName !== imageName) {\r\n//       this.setState({ imageArray: [], page: 1, status: \"pending\" });\r\n\r\n//       ImageAPI.fetchImage(imageName, page, perPage)\r\n//         .then((data) => {\r\n//           if (data.hits.length > 0) {\r\n//             this.setState({\r\n//               imageArray: data.hits,\r\n//               status: \"resolved\",\r\n//             });\r\n//             this.props.pageScroll();\r\n//           } else {\r\n//             this.setState({ status: \"rejected\" });\r\n//           }\r\n//         })\r\n\r\n//         .catch((error) => {\r\n//           this.setState({ status: \"rejected\" });\r\n//         });\r\n//     } else if  (prevState.page !== page && page !== 1) {\r\n//       this.setState({ status: \"pending\" });\r\n//       ImageAPI.fetchImage(imageName, page, perPage)\r\n//         .then((data) => {\r\n//           this.setState((prev) => ({\r\n//             imageArray: [...prev.imageArray, ...data.hits],\r\n//             status: \"resolved\",\r\n//           }));\r\n//           this.props.pageScroll();\r\n//         })\r\n//         .catch((error) => this.setState({ status: \"rejected\" }));\r\n//     }\r\n//   }\r\n\r\n//   handleClickBtn = () => {\r\n//     this.setState(({ page }) => {\r\n//       return {\r\n//         page: page + 1,\r\n//         status: \"pending\",\r\n//       };\r\n//     });\r\n//   };\r\n\r\n//   toggleModal = () => {\r\n//     this.setState(({ showModal }) => ({\r\n//       showModal: !showModal,\r\n//     }));\r\n//   };\r\n\r\n//   onImageClick = (e) => {\r\n//     e.preventDefault();\r\n//     let src = e.target.src;\r\n//     this.setState({\r\n//       largeImg: this.state.imageArray.find((el) => el.webformatURL === src),\r\n//     });\r\n//     this.toggleModal();\r\n//   };\r\n\r\n//   render() {\r\n//     const { status, imageArray, showModal, largeImg, page } = this.state;\r\n//     const activeBtn = imageArray.length > 0 && imageArray.length / page === 12;\r\n\r\n//     return (\r\n//       <div>\r\n//         {status === \"idle\" && (\r\n//           <div className={s.Query}>Please enter your query!</div>\r\n//         )}\r\n//         {status === \"pending\" && (\r\n//           <Loader\r\n//             className={s.Loader}\r\n//             type=\"Circles\"\r\n//             color=\"#d5e215\"\r\n//             height={100}\r\n//             width={100}\r\n//           />\r\n//         )}\r\n//         {status === \"rejected\" && (\r\n//           <h1 className={s.Query}>Something was wrong please try again!</h1>\r\n//         )}\r\n//         <ul className={s.ImageGallery}>\r\n//           <ImageGalleryItem\r\n//             imageArray={imageArray}\r\n//             onImageClick={this.onImageClick}\r\n//           />\r\n//         </ul>\r\n//         {activeBtn && <Button handleClickBtn={this.handleClickBtn} />}\r\n//         {showModal && (\r\n//           <Modal onClose={this.toggleModal} largeImg={largeImg}></Modal>\r\n//         )}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// ImageGallery.propTypes = {\r\n//   imageName: PropTypes.string,\r\n//   pageScroll: PropTypes.func,\r\n// };\r\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\n\nexport default function App() {\n  const [imageName, setimageName] = useState(\"\");\n\n  const handleFormSubmit = (imageName) => {\n    setimageName(imageName);\n  };\n\n  const pageScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  return (\n    <div>\n      <Searchbar handleFormSubmit={handleFormSubmit} />\n      <ImageGallery imageName={imageName} pageScroll={pageScroll} />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2jxf9\",\"Query\":\"ImageGallery_Query__13D8-\",\"Loader\":\"ImageGallery_Loader__3e0WW\"};"],"sourceRoot":""}