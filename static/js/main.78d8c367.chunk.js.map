{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/ImageGalleryItem/ImageGalleryItem.js","components/services/pixabay.js","components/Modal/Modal.js","components/Button/Button.js","components/Searchbar/Searchbar.js","components/Title/SolidTitle.js","components/ImageGallery/ImageGallery.js","App.js","reportWebVitals.js","index.js","components/Searchbar/SearchBar.module.css","components/Title/SoloidTitle.module.css"],"names":["module","exports","ImageGalleryItem","imageArray","onImageClick","map","image","className","s","src","webformatURL","alt","tag","ImageGalleryItemImage","onClick","id","api","fetchImage","imageName","page","fetch","then","response","ok","json","Promise","reject","Error","modalRoot","document","querySelector","Modal","toggleModal","largeImg","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","Overlay","event","currentTarget","target","largeImageURL","Button","handleClickBtn","type","ButtonItem","Searchbar","handleFormSubmit","useState","setImageName","onSubmit","preventDefault","trim","alert","SearchForm","SearchFormButton","reactIcons","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","toLowerCase","Title","titleText","title","useRef","handleMouseLeave","useCallback","gsap","to","attr","scale","ease","baseFrequency","current","fontVariationSettings","handleMouseEnter","container","title3","onMouseEnter","onMouseLeave","ref","distort","numOctaves","seed","stitchTiles","x","y","width","height","result","in","in2","xChannelSelector","yChannelSelector","filterUnits","ImageGallery","pageScroll","setPage","perPage","setImageArray","status","setStatus","showModal","setShowModal","setLargeImg","setimageName","ImageAPI","data","hits","length","prev","catch","error","activeBtn","Loader","color","find","el","App","scrollTo","top","documentElement","scrollHeight","behavior","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.78d8c367.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__20WEC\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__301u9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__387sK\",\"Modal\":\"Modal_Modal__2ChzB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2jxf9\",\"Loader\":\"ImageGallery_Loader__3e0WW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonItem\":\"Button_ButtonItem__3etLA\"};","import s from \"./ImageGalleryItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function ImageGalleryItem({ imageArray, onImageClick }) {\r\n  return imageArray.map((image) => (\r\n    <li className={s.ImageGalleryItem} key={image.id}>\r\n      <img\r\n        src={image.webformatURL}\r\n        alt={image.tag}\r\n        className={s.ImageGalleryItemImage}\r\n        onClick={onImageClick}\r\n      />\r\n    </li>\r\n  ));\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  onImageClick: PropTypes.func,\r\n  imageArray: PropTypes.array,\r\n};\r\n","export function fetchImage(imageName, page) {\r\n\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${imageName}&page=${page}&key=23276068-4a413a2f7a08bb1d67038a93d&image_type=photo&orientation=horizontal&per_page=12`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(`There are no images called ${imageName}`));\r\n  });\r\n}\r\n\r\nconst api = { fetchImage };\r\nexport default api;\r\n","import { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport s from \"./Modal.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\nexport default function Modal({ toggleModal, largeImg }) {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n  });\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      toggleModal();\r\n    }\r\n  };\r\n\r\n  const handleOverlayClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      toggleModal();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={s.Overlay} onClick={handleOverlayClick}>\r\n      <div className={s.Modal}>\r\n        <img src={largeImg.largeImageURL} alt=\"\" />\r\n      </div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  toggleModal: PropTypes.func,\r\n  largeImg: PropTypes.object,\r\n};\r\n","import s from \"./Button.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Button({ handleClickBtn }) {\r\n  return (\r\n    <button type=\"button\" className={s.ButtonItem} onClick={handleClickBtn}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  handleClickBtn: PropTypes.func,\r\n};\r\n","import { useState } from \"react\";\r\nimport { ImSearch } from \"react-icons/im\";\r\nimport s from \"./SearchBar.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Searchbar({ handleFormSubmit }) {\r\n  const [imageName, setImageName] = useState(\"\");\r\n\r\n  const handleNameChange = (event) => {\r\n    setImageName(event.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (imageName.trim() === \"\") {\r\n      alert(\"Пожалуйста введите ваш запрос\");\r\n      return;\r\n    }\r\n    handleFormSubmit(imageName);\r\n    setImageName(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form onSubmit={handleSubmit} className={s.SearchForm}>\r\n        <button type=\"submit\" className={s.SearchFormButton}>\r\n          <ImSearch className={s.reactIcons} />\r\n        </button>\r\n\r\n        <input\r\n          className={s.SearchFormInput}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={imageName}\r\n          onChange={handleNameChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  handleFormSubmit: PropTypes.func,\r\n};\r\n","import s from \"./SoloidTitle.module.css\";\r\nimport { gsap } from \"gsap\";\r\nimport { useRef, useCallback } from \"react\";\r\n\r\nexport default function Title({ titleText }) {\r\n  const title = useRef();\r\n\r\n  const handleMouseLeave = useCallback(() => {\r\n    gsap.to(\r\n      \"feDisplacementMap\",\r\n      1,\r\n      {\r\n        attr: {\r\n          scale: 0,\r\n        },\r\n        ease: \"circ.out\",\r\n      },\r\n      1\r\n    );\r\n    gsap.to(\r\n      \"feTurbulence\",\r\n      1,\r\n      {\r\n        attr: {\r\n          baseFrequency: \"2.01 .01\",\r\n        },\r\n        ease: \"circ.out\",\r\n      },\r\n      1\r\n    );\r\n    gsap.to(\r\n      title.current,\r\n      1,\r\n      {\r\n        fontVariationSettings: \"'wght' 700\",\r\n        ease: \"back.out\",\r\n      },\r\n      1\r\n    );\r\n  }, []);\r\n  const handleMouseEnter = useCallback(() => {\r\n    gsap.to(\"feDisplacementMap\", 1, {\r\n      attr: {\r\n        scale: 100,\r\n      },\r\n      ease: \"circ.out\",\r\n    });\r\n    gsap.to(\r\n      \"feTurbulence\",\r\n      1,\r\n      {\r\n        attr: {\r\n          baseFrequency: \"2.08 .08\",\r\n        },\r\n        ease: \"circ.out\",\r\n      },\r\n      1\r\n    );\r\n    gsap.to(title.current, 1, {\r\n      fontVariationSettings: \"'wght' 650\",\r\n      ease: \"back.out\",\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className={s.container}>\r\n      <h2\r\n        className={s.title3}\r\n        onMouseEnter={handleMouseEnter}\r\n        onMouseLeave={handleMouseLeave}\r\n        ref={title}\r\n      >\r\n        {titleText}\r\n      </h2>\r\n      <svg className={s.distort}>\r\n        <filter id=\"distortionFilter\">\r\n          <feTurbulence\r\n            type=\"fractalNoise\"\r\n            baseFrequency=\"2.01 .01\"\r\n            numOctaves=\"5\"\r\n            seed=\"2\"\r\n            stitchTiles=\"noStitch\"\r\n            x=\"0%\"\r\n            y=\"0%\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            result=\"noise\"\r\n          ></feTurbulence>\r\n          <feDisplacementMap\r\n            in=\"SourceGraphic\"\r\n            in2=\"noise\"\r\n            scale=\"0\"\r\n            xChannelSelector=\"R\"\r\n            yChannelSelector=\"B\"\r\n            x=\"0%\"\r\n            y=\"0%\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            filterUnits=\"userSpaceOnUse\"\r\n          ></feDisplacementMap>\r\n        </filter>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\nimport ImageAPI from \"../services/pixabay\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport Button from \"../Button/Button\";\r\nimport Searchbar from \"../Searchbar/Searchbar\";\r\nimport Title from \"../Title/SolidTitle\";\r\nimport s from \"./ImageGallery.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function ImageGallery({ pageScroll }) {\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerPage] = useState(12);\r\n  const [imageArray, setImageArray] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState(\"idle\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [largeImg, setLargeImg] = useState(\"\");\r\n  const [imageName, setimageName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!imageName) {\r\n      return;\r\n    }\r\n\r\n    ImageAPI.fetchImage(imageName, page, perPage)\r\n      .then((data) => {\r\n        if (data.hits.length > 0) {\r\n          setImageArray((prev) => [...prev, ...data.hits]);\r\n          setStatus(\"resolved\");\r\n          pageScroll();\r\n        } else {\r\n          setStatus(\"rejected\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setStatus(\"rejected\");\r\n      });\r\n  }, [imageName, page, perPage, pageScroll]);\r\n\r\n  const handleClickBtn = () => {\r\n    setPage((page) => page + 1);\r\n    setStatus(\"pending\");\r\n  };\r\n\r\n  const handleFormSubmit = (imageName) => {\r\n    setimageName(imageName);\r\n    setImageArray([]);\r\n    setPage(1);\r\n  };\r\n\r\n  const toggleModal = () => setShowModal(!showModal);\r\n\r\n  const onImageClick = (e) => {\r\n    e.preventDefault();\r\n    let src = e.target.src;\r\n    setLargeImg(imageArray.find((el) => el.webformatURL === src));\r\n    toggleModal();\r\n  };\r\n\r\n  const activeBtn = imageArray.length > 0 && imageArray.length / page === 12;\r\n\r\n  return (\r\n    <div>\r\n      <Searchbar handleFormSubmit={handleFormSubmit} />\r\n      {status === \"idle\" && <Title titleText=\"Please enter your query!\" />}\r\n      {status === \"pending\" && (\r\n        <Loader\r\n          className={s.Loader}\r\n          type=\"Circles\"\r\n          color=\"#d5e215\"\r\n          height={100}\r\n          width={100}\r\n        />\r\n      )}\r\n      {status === \"rejected\" && (\r\n        <h1>\r\n          <Title titleText=\"Something was wrong please try again!\" />\r\n        </h1>\r\n      )}\r\n      <ul className={s.ImageGallery}>\r\n        <ImageGalleryItem imageArray={imageArray} onImageClick={onImageClick} />\r\n      </ul>\r\n      {activeBtn && <Button handleClickBtn={handleClickBtn} />}\r\n      {showModal && (\r\n        <Modal toggleModal={toggleModal} largeImg={largeImg}></Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  imageName: PropTypes.object,\r\n  pageScroll: PropTypes.func,\r\n};\r\n\r\n// export default class ImageGallery extends Component {\r\n//   state = {\r\n//     page: 1,\r\n//     perPage: 12,\r\n//     imageArray: [],\r\n//     error: null,\r\n//     status: \"idle\",\r\n//     showModal: false,\r\n//     largeImg: null,\r\n//   };\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     const { page, perPage } = this.state;\r\n//     const { imageName } = this.props;\r\n\r\n//     if (prevProps.imageName !== imageName) {\r\n//       this.setState({ imageArray: [], page: 1, status: \"pending\" });\r\n\r\n//       ImageAPI.fetchImage(imageName, page, perPage)\r\n//         .then((data) => {\r\n//           if (data.hits.length > 0) {\r\n//             this.setState({\r\n//               imageArray: data.hits,\r\n//               status: \"resolved\",\r\n//             });\r\n//             this.props.pageScroll();\r\n//           } else {\r\n//             this.setState({ status: \"rejected\" });\r\n//           }\r\n//         })\r\n\r\n//         .catch((error) => {\r\n//           this.setState({ status: \"rejected\" });\r\n//         });\r\n//     } else if  (prevState.page !== page && page !== 1) {\r\n//       this.setState({ status: \"pending\" });\r\n//       ImageAPI.fetchImage(imageName, page, perPage)\r\n//         .then((data) => {\r\n//           this.setState((prev) => ({\r\n//             imageArray: [...prev.imageArray, ...data.hits],\r\n//             status: \"resolved\",\r\n//           }));\r\n//           this.props.pageScroll();\r\n//         })\r\n//         .catch((error) => this.setState({ status: \"rejected\" }));\r\n//     }\r\n//   }\r\n\r\n//   handleClickBtn = () => {\r\n//     this.setState(({ page }) => {\r\n//       return {\r\n//         page: page + 1,\r\n//         status: \"pending\",\r\n//       };\r\n//     });\r\n//   };\r\n\r\n//   toggleModal = () => {\r\n//     this.setState(({ showModal }) => ({\r\n//       showModal: !showModal,\r\n//     }));\r\n//   };\r\n\r\n//   onImageClick = (e) => {\r\n//     e.preventDefault();\r\n//     let src = e.target.src;\r\n//     this.setState({\r\n//       largeImg: this.state.imageArray.find((el) => el.webformatURL === src),\r\n//     });\r\n//     this.toggleModal();\r\n//   };\r\n\r\n//   render() {\r\n//     const { status, imageArray, showModal, largeImg, page } = this.state;\r\n//     const activeBtn = imageArray.length > 0 && imageArray.length / page === 12;\r\n\r\n//     return (\r\n//       <div>\r\n//         {status === \"idle\" && (\r\n//           <div className={s.Query}>Please enter your query!</div>\r\n//         )}\r\n//         {status === \"pending\" && (\r\n//           <Loader\r\n//             className={s.Loader}\r\n//             type=\"Circles\"\r\n//             color=\"#d5e215\"\r\n//             height={100}\r\n//             width={100}\r\n//           />\r\n//         )}\r\n//         {status === \"rejected\" && (\r\n//           <h1 className={s.Query}>Something was wrong please try again!</h1>\r\n//         )}\r\n//         <ul className={s.ImageGallery}>\r\n//           <ImageGalleryItem\r\n//             imageArray={imageArray}\r\n//             onImageClick={this.onImageClick}\r\n//           />\r\n//         </ul>\r\n//         {activeBtn && <Button handleClickBtn={this.handleClickBtn} />}\r\n//         {showModal && (\r\n//           <Modal onClose={this.toggleModal} largeImg={largeImg}></Modal>\r\n//         )}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// ImageGallery.propTypes = {\r\n//   imageName: PropTypes.string,\r\n//   pageScroll: PropTypes.func,\r\n// };\r\n","import \"./App.css\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\n\nexport default function App(imageName) {\n  const pageScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  return (\n    <div>\n      <ImageGallery imageName={imageName} pageScroll={pageScroll} />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__xZkSA\",\"SearchForm\":\"SearchBar_SearchForm__39vQG\",\"SearchFormButton\":\"SearchBar_SearchFormButton__KZ8et\",\"SearchFormButton-label\":\"SearchBar_SearchFormButton-label__3kQX9\",\"SearchFormInput\":\"SearchBar_SearchFormInput__2NSmQ\",\"reactIcons\":\"SearchBar_reactIcons__1J_pw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientColor\":\"SoloidTitle_gradientColor__1fm78\",\"title3\":\"SoloidTitle_title3__3CV93 SoloidTitle_gradientColor__1fm78\",\"distort\":\"SoloidTitle_distort__38xLA\",\"container\":\"SoloidTitle_container__3AP0X\"};"],"sourceRoot":""}